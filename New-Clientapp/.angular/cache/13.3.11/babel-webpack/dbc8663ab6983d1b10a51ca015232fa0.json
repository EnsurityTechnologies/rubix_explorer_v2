{"ast":null,"code":"import { DataTokenInfoDto } from '../modals/rubixcardsdto';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/data.service\";\nimport * as i3 from \"@angular/common\";\n\nfunction DataTokenInfoComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelement(1, \"img\", 17);\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DataTokenInfoComponent_p_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"b\");\n    i0.ɵɵtext(2, \"PledgerDID: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5, \"Token ID : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementStart(7, \"Strong\");\n    i0.ɵɵtext(8, \"Amount: \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.pledgerDID, \" \\u00A0\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", item_r3.quorumKey, \" - \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r3.quorumValue, \"\");\n  }\n}\n\nfunction DataTokenInfoComponent_p_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"b\");\n    i0.ɵɵtext(2, \"CreatorDID:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"Strong\");\n    i0.ɵɵtext(5, \"Token ID : \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", item_r4.dataTokenKey, \" - \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", item_r4.dataTokenValue, \"\");\n  }\n}\n\nexport let DataTokenInfoComponent = /*#__PURE__*/(() => {\n  class DataTokenInfoComponent {\n    constructor(route, router, dataService) {\n      this.route = route;\n      this.router = router;\n      this.dataService = dataService;\n      this.tokenId = \"\";\n      this.transpage = 1;\n      this.transItemsPerPage = 10;\n      this.spinstatus = true;\n      this.transactionInfo = false;\n      this.nftInfo = false;\n      this.nftColorInfo = false;\n      this.quorum_listInfoObject = {};\n      this.quorum_listInfoData = [];\n      this.pledgerDID = '';\n      this.quorum_list_insideTokensObjest = {};\n      this.datatokensInfoObject = {};\n      this.datatokensInfoData = [];\n      this.datatokenInfo = new DataTokenInfoDto();\n    }\n\n    ngOnInit() {\n      const id = this.route.snapshot.paramMap.get('id');\n      this.dataService.getDataTokensInfo(id).subscribe(data => {\n        this.datatokenInfo.transaction_id = data.transaction_id;\n        this.datatokenInfo.commiter = data.commiter;\n        this.datatokenInfo.amount = data.amount;\n        this.datatokenInfo.creationTime = data.creation_time;\n        this.datatokenInfo.volume = data.volume;\n        this.quorum_listInfoObject = JSON.parse(data.quorum_list);\n        this.datatokensInfoObject = JSON.parse(data.datatokens); // for (var type in this.quorum_listInfoObject) {\n        //   var item1 = {quorumKey:'',quorumValue:''};\n        //   item1.quorumKey = type;\n        //   item1.quorumValue = this.quorum_listInfoObject[type];\n        //   this.quorum_listInfoData.push(item1);\n        // }\n\n        for (var type in this.quorum_listInfoObject) {\n          this.pledgerDID = type;\n          this.quorum_list_insideTokensObjest = this.quorum_listInfoObject[type];\n        }\n\n        for (var type in this.quorum_list_insideTokensObjest) {\n          var item1 = {\n            quorumKey: '',\n            quorumValue: 0\n          };\n          item1.quorumKey = type;\n          item1.quorumValue = this.quorum_list_insideTokensObjest[type];\n          this.quorum_listInfoData.push(item1);\n        }\n\n        for (var type in this.datatokensInfoObject) {\n          var item2 = {\n            dataTokenKey: '',\n            dataTokenValue: ''\n          };\n          item2.dataTokenKey = type;\n          item2.dataTokenValue = this.datatokensInfoObject[type];\n          this.datatokensInfoData.push(item2);\n        }\n\n        this.spinstatus = false; // this.loadGrids(data.quorum_list);\n        // console.log(this.nftCreatorinfo)\n        // if(this.nftCreatorinfo.color == null)\n        // {\n        //   this.nftColorInfo = false;\n        // }\n        // if(data.transactionType == 0){\n        //   this.transactionInfo = true;\n        // }\n        // else\n        // {\n        //   this.nftInfo = true;\n        // }\n      });\n    }\n\n  }\n\n  DataTokenInfoComponent.ɵfac = function DataTokenInfoComponent_Factory(t) {\n    return new (t || DataTokenInfoComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.DataService));\n  };\n\n  DataTokenInfoComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DataTokenInfoComponent,\n    selectors: [[\"app-data-token-info\"]],\n    decls: 37,\n    vars: 10,\n    consts: [[\"class\", \"spinner\", 4, \"ngIf\"], [1, \"block-explorer-features\", \"section\", \"bg-bottom\"], [1, \"container\"], [1, \"row\"], [1, \"col-lg-12\"], [1, \"center-heading\"], [1, \"section-title\", \"text-center\"], [1, \"card\", \"cardShadow\"], [1, \"row\", \"mb-2\"], [1, \"row\", \"m-bottom-70\"], [1, \"col-lg-12\", \"col-md-12\", \"col-sm-12\"], [1, \"card-body\"], [1, \"card-text\"], [1, \"form-group\", \"row\", \"customptag\"], [1, \"form-group\", \"dictionaryList\"], [4, \"ngFor\", \"ngForOf\"], [1, \"spinner\"], [\"src\", \"../assets/images/spin.gif\", \"alt\", \"spin\"]],\n    template: function DataTokenInfoComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DataTokenInfoComponent_div_0_Template, 2, 0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"section\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\", 6);\n        i0.ɵɵtext(7, \"Data Token Transaction Info\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"div\", 8)(10, \"div\", 9)(11, \"div\", 10)(12, \"div\", 11)(13, \"div\", 12)(14, \"div\", 13)(15, \"p\")(16, \"b\");\n        i0.ɵɵtext(17, \"Transaction Id:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"p\")(20, \"b\");\n        i0.ɵɵtext(21, \"Commiter:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"p\")(24, \"b\");\n        i0.ɵɵtext(25, \"Volume:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"p\")(28, \"b\");\n        i0.ɵɵtext(29, \"Creation Time:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(30);\n        i0.ɵɵpipe(31, \"date\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(32, \"div\", 14)(33, \"div\");\n        i0.ɵɵtemplate(34, DataTokenInfoComponent_p_34_Template, 10, 3, \"p\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\");\n        i0.ɵɵtemplate(36, DataTokenInfoComponent_p_36_Template, 7, 2, \"p\", 15);\n        i0.ɵɵelementEnd()()()()()()()()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.spinstatus);\n        i0.ɵɵadvance(18);\n        i0.ɵɵtextInterpolate1(\" \", ctx.datatokenInfo.transaction_id, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.datatokenInfo.commiter, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.datatokenInfo.volume, \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(31, 7, ctx.datatokenInfo.creationTime, \"medium\"), \"\");\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.quorum_listInfoData);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.datatokensInfoData);\n      }\n    },\n    directives: [i3.NgIf, i3.NgForOf],\n    pipes: [i3.DatePipe],\n    styles: [\".customptag[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]   b[_ngcontent-%COMP%]{min-width:150px;display:inline-block}.customptag[_ngcontent-%COMP%]{font-weight:400;font-size:14px;color:#3b566e}.cardShadow[_ngcontent-%COMP%]:hover{box-shadow:0 0 34px #3f42571f}.table-latests[_ngcontent-%COMP%]{background:#fff;border:1px solid #CEE1F8}.table-latests[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%]{font-weight:600;font-size:14px;color:#fff;background-color:#262366}.table-latests[_ngcontent-%COMP%]   td[_ngcontent-%COMP%]{padding:10px 15px;border-top:1px solid #CEE1F8}.table-latests[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]{font-weight:400;font-size:14px;color:#3b566e}.table-striped[_ngcontent-%COMP%]   tbody[_ngcontent-%COMP%]   tr[_ngcontent-%COMP%]:nth-of-type(odd){background:#F3F8FF}.qr[_ngcontent-%COMP%]{border:1px solid #CEE1F8;padding-top:25px;padding-bottom:25px;background:#fff}.dictionaryList[_ngcontent-%COMP%]{font-weight:400;font-size:14px;color:#3b566e}.dictionaryList[_ngcontent-%COMP%]   b[_ngcontent-%COMP%]{min-width:150px;display:inline-block}\"]\n  });\n  return DataTokenInfoComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}